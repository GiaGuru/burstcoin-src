/*   1:    */ package fr.cryptohash;
/*   2:    */ 
/*   3:    */ public class RIPEMD128
/*   4:    */   extends MDHelper
/*   5:    */ {
/*   6:    */   private int[] currentVal;
/*   7:    */   private int[] X;
/*   8:    */   
/*   9:    */   public RIPEMD128()
/*  10:    */   {
/*  11: 47 */     super(true, 8);
/*  12:    */   }
/*  13:    */   
/*  14:    */   public Digest copy()
/*  15:    */   {
/*  16: 55 */     RIPEMD128 localRIPEMD128 = new RIPEMD128();
/*  17: 56 */     System.arraycopy(this.currentVal, 0, localRIPEMD128.currentVal, 0, this.currentVal.length);
/*  18:    */     
/*  19: 58 */     return copyState(localRIPEMD128);
/*  20:    */   }
/*  21:    */   
/*  22:    */   public int getDigestLength()
/*  23:    */   {
/*  24: 64 */     return 16;
/*  25:    */   }
/*  26:    */   
/*  27:    */   public int getBlockLength()
/*  28:    */   {
/*  29: 70 */     return 64;
/*  30:    */   }
/*  31:    */   
/*  32:    */   protected void engineReset()
/*  33:    */   {
/*  34: 76 */     this.currentVal[0] = 1732584193;
/*  35: 77 */     this.currentVal[1] = -271733879;
/*  36: 78 */     this.currentVal[2] = -1732584194;
/*  37: 79 */     this.currentVal[3] = 271733878;
/*  38:    */   }
/*  39:    */   
/*  40:    */   protected void doPadding(byte[] paramArrayOfByte, int paramInt)
/*  41:    */   {
/*  42: 85 */     makeMDPadding();
/*  43: 86 */     for (int i = 0; i < 4; i++) {
/*  44: 87 */       encodeLEInt(this.currentVal[i], paramArrayOfByte, paramInt + 4 * i);
/*  45:    */     }
/*  46:    */   }
/*  47:    */   
/*  48:    */   protected void doInit()
/*  49:    */   {
/*  50: 94 */     this.currentVal = new int[4];
/*  51: 95 */     this.X = new int[16];
/*  52: 96 */     engineReset();
/*  53:    */   }
/*  54:    */   
/*  55:    */   private static final void encodeLEInt(int paramInt1, byte[] paramArrayOfByte, int paramInt2)
/*  56:    */   {
/*  57:110 */     paramArrayOfByte[(paramInt2 + 0)] = ((byte)paramInt1);
/*  58:111 */     paramArrayOfByte[(paramInt2 + 1)] = ((byte)(paramInt1 >>> 8));
/*  59:112 */     paramArrayOfByte[(paramInt2 + 2)] = ((byte)(paramInt1 >>> 16));
/*  60:113 */     paramArrayOfByte[(paramInt2 + 3)] = ((byte)(paramInt1 >>> 24));
/*  61:    */   }
/*  62:    */   
/*  63:    */   private static final int decodeLEInt(byte[] paramArrayOfByte, int paramInt)
/*  64:    */   {
/*  65:126 */     return paramArrayOfByte[(paramInt + 0)] & 0xFF | (paramArrayOfByte[(paramInt + 1)] & 0xFF) << 8 | (paramArrayOfByte[(paramInt + 2)] & 0xFF) << 16 | (paramArrayOfByte[(paramInt + 3)] & 0xFF) << 24;
/*  66:    */   }
/*  67:    */   
/*  68:    */   private static final int circularLeft(int paramInt1, int paramInt2)
/*  69:    */   {
/*  70:143 */     return paramInt1 << paramInt2 | paramInt1 >>> 32 - paramInt2;
/*  71:    */   }
/*  72:    */   
/*  73:146 */   private static final int[] r1 = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2 };
/*  74:153 */   private static final int[] r2 = { 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14 };
/*  75:160 */   private static final int[] s1 = { 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12 };
/*  76:167 */   private static final int[] s2 = { 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8 };
/*  77:    */   
/*  78:    */   protected void processBlock(byte[] paramArrayOfByte)
/*  79:    */   {
/*  80:    */     int i4;
/*  81:    */     int n;
/*  82:181 */     int i = n = i4 = this.currentVal[0];
/*  83:    */     int i5;
/*  84:    */     int i1;
/*  85:182 */     int j = i1 = i5 = this.currentVal[1];
/*  86:    */     int i6;
/*  87:    */     int i2;
/*  88:183 */     int k = i2 = i6 = this.currentVal[2];
/*  89:    */     int i7;
/*  90:    */     int i3;
/*  91:184 */     int m = i3 = i7 = this.currentVal[3];
/*  92:    */     
/*  93:186 */     int i8 = 0;
/*  94:186 */     for (int i9 = 0; i8 < 16; i9 += 4)
/*  95:    */     {
/*  96:187 */       this.X[i8] = decodeLEInt(paramArrayOfByte, i9);i8++;
/*  97:    */     }
/*  98:189 */     for (i8 = 0; i8 < 16; i8 += 4)
/*  99:    */     {
/* 100:190 */       i9 = n + (i1 ^ i2 ^ i3) + this.X[(i8 + 0)];
/* 101:    */       
/* 102:192 */       n = i9 << s1[(i8 + 0)] | i9 >>> 32 - s1[(i8 + 0)];
/* 103:    */       
/* 104:194 */       i9 = i3 + (n ^ i1 ^ i2) + this.X[(i8 + 1)];
/* 105:    */       
/* 106:196 */       i3 = i9 << s1[(i8 + 1)] | i9 >>> 32 - s1[(i8 + 1)];
/* 107:    */       
/* 108:198 */       i9 = i2 + (i3 ^ n ^ i1) + this.X[(i8 + 2)];
/* 109:    */       
/* 110:200 */       i2 = i9 << s1[(i8 + 2)] | i9 >>> 32 - s1[(i8 + 2)];
/* 111:    */       
/* 112:202 */       i9 = i1 + (i2 ^ i3 ^ n) + this.X[(i8 + 3)];
/* 113:    */       
/* 114:204 */       i1 = i9 << s1[(i8 + 3)] | i9 >>> 32 - s1[(i8 + 3)];
/* 115:    */     }
/* 116:206 */     for (i8 = 16; i8 < 32; i8 += 4)
/* 117:    */     {
/* 118:207 */       i9 = n + ((i2 ^ i3) & i1 ^ i3) + this.X[r1[(i8 + 0)]] + 1518500249;
/* 119:    */       
/* 120:209 */       n = i9 << s1[(i8 + 0)] | i9 >>> 32 - s1[(i8 + 0)];
/* 121:    */       
/* 122:211 */       i9 = i3 + ((i1 ^ i2) & n ^ i2) + this.X[r1[(i8 + 1)]] + 1518500249;
/* 123:    */       
/* 124:213 */       i3 = i9 << s1[(i8 + 1)] | i9 >>> 32 - s1[(i8 + 1)];
/* 125:    */       
/* 126:215 */       i9 = i2 + ((n ^ i1) & i3 ^ i1) + this.X[r1[(i8 + 2)]] + 1518500249;
/* 127:    */       
/* 128:217 */       i2 = i9 << s1[(i8 + 2)] | i9 >>> 32 - s1[(i8 + 2)];
/* 129:    */       
/* 130:219 */       i9 = i1 + ((i3 ^ n) & i2 ^ n) + this.X[r1[(i8 + 3)]] + 1518500249;
/* 131:    */       
/* 132:221 */       i1 = i9 << s1[(i8 + 3)] | i9 >>> 32 - s1[(i8 + 3)];
/* 133:    */     }
/* 134:223 */     for (i8 = 32; i8 < 48; i8 += 4)
/* 135:    */     {
/* 136:224 */       i9 = n + ((i1 | i2 ^ 0xFFFFFFFF) ^ i3) + this.X[r1[(i8 + 0)]] + 1859775393;
/* 137:    */       
/* 138:226 */       n = i9 << s1[(i8 + 0)] | i9 >>> 32 - s1[(i8 + 0)];
/* 139:    */       
/* 140:228 */       i9 = i3 + ((n | i1 ^ 0xFFFFFFFF) ^ i2) + this.X[r1[(i8 + 1)]] + 1859775393;
/* 141:    */       
/* 142:230 */       i3 = i9 << s1[(i8 + 1)] | i9 >>> 32 - s1[(i8 + 1)];
/* 143:    */       
/* 144:232 */       i9 = i2 + ((i3 | n ^ 0xFFFFFFFF) ^ i1) + this.X[r1[(i8 + 2)]] + 1859775393;
/* 145:    */       
/* 146:234 */       i2 = i9 << s1[(i8 + 2)] | i9 >>> 32 - s1[(i8 + 2)];
/* 147:    */       
/* 148:236 */       i9 = i1 + ((i2 | i3 ^ 0xFFFFFFFF) ^ n) + this.X[r1[(i8 + 3)]] + 1859775393;
/* 149:    */       
/* 150:238 */       i1 = i9 << s1[(i8 + 3)] | i9 >>> 32 - s1[(i8 + 3)];
/* 151:    */     }
/* 152:240 */     for (i8 = 48; i8 < 64; i8 += 4)
/* 153:    */     {
/* 154:241 */       i9 = n + ((i1 ^ i2) & i3 ^ i2) + this.X[r1[(i8 + 0)]] + -1894007588;
/* 155:    */       
/* 156:243 */       n = i9 << s1[(i8 + 0)] | i9 >>> 32 - s1[(i8 + 0)];
/* 157:    */       
/* 158:245 */       i9 = i3 + ((n ^ i1) & i2 ^ i1) + this.X[r1[(i8 + 1)]] + -1894007588;
/* 159:    */       
/* 160:247 */       i3 = i9 << s1[(i8 + 1)] | i9 >>> 32 - s1[(i8 + 1)];
/* 161:    */       
/* 162:249 */       i9 = i2 + ((i3 ^ n) & i1 ^ n) + this.X[r1[(i8 + 2)]] + -1894007588;
/* 163:    */       
/* 164:251 */       i2 = i9 << s1[(i8 + 2)] | i9 >>> 32 - s1[(i8 + 2)];
/* 165:    */       
/* 166:253 */       i9 = i1 + ((i2 ^ i3) & n ^ i3) + this.X[r1[(i8 + 3)]] + -1894007588;
/* 167:    */       
/* 168:255 */       i1 = i9 << s1[(i8 + 3)] | i9 >>> 32 - s1[(i8 + 3)];
/* 169:    */     }
/* 170:258 */     for (i8 = 0; i8 < 16; i8 += 4)
/* 171:    */     {
/* 172:259 */       i9 = i4 + ((i5 ^ i6) & i7 ^ i6) + this.X[r2[(i8 + 0)]] + 1352829926;
/* 173:    */       
/* 174:261 */       i4 = i9 << s2[(i8 + 0)] | i9 >>> 32 - s2[(i8 + 0)];
/* 175:    */       
/* 176:263 */       i9 = i7 + ((i4 ^ i5) & i6 ^ i5) + this.X[r2[(i8 + 1)]] + 1352829926;
/* 177:    */       
/* 178:265 */       i7 = i9 << s2[(i8 + 1)] | i9 >>> 32 - s2[(i8 + 1)];
/* 179:    */       
/* 180:267 */       i9 = i6 + ((i7 ^ i4) & i5 ^ i4) + this.X[r2[(i8 + 2)]] + 1352829926;
/* 181:    */       
/* 182:269 */       i6 = i9 << s2[(i8 + 2)] | i9 >>> 32 - s2[(i8 + 2)];
/* 183:    */       
/* 184:271 */       i9 = i5 + ((i6 ^ i7) & i4 ^ i7) + this.X[r2[(i8 + 3)]] + 1352829926;
/* 185:    */       
/* 186:273 */       i5 = i9 << s2[(i8 + 3)] | i9 >>> 32 - s2[(i8 + 3)];
/* 187:    */     }
/* 188:275 */     for (i8 = 16; i8 < 32; i8 += 4)
/* 189:    */     {
/* 190:276 */       i9 = i4 + ((i5 | i6 ^ 0xFFFFFFFF) ^ i7) + this.X[r2[(i8 + 0)]] + 1548603684;
/* 191:    */       
/* 192:278 */       i4 = i9 << s2[(i8 + 0)] | i9 >>> 32 - s2[(i8 + 0)];
/* 193:    */       
/* 194:280 */       i9 = i7 + ((i4 | i5 ^ 0xFFFFFFFF) ^ i6) + this.X[r2[(i8 + 1)]] + 1548603684;
/* 195:    */       
/* 196:282 */       i7 = i9 << s2[(i8 + 1)] | i9 >>> 32 - s2[(i8 + 1)];
/* 197:    */       
/* 198:284 */       i9 = i6 + ((i7 | i4 ^ 0xFFFFFFFF) ^ i5) + this.X[r2[(i8 + 2)]] + 1548603684;
/* 199:    */       
/* 200:286 */       i6 = i9 << s2[(i8 + 2)] | i9 >>> 32 - s2[(i8 + 2)];
/* 201:    */       
/* 202:288 */       i9 = i5 + ((i6 | i7 ^ 0xFFFFFFFF) ^ i4) + this.X[r2[(i8 + 3)]] + 1548603684;
/* 203:    */       
/* 204:290 */       i5 = i9 << s2[(i8 + 3)] | i9 >>> 32 - s2[(i8 + 3)];
/* 205:    */     }
/* 206:292 */     for (i8 = 32; i8 < 48; i8 += 4)
/* 207:    */     {
/* 208:293 */       i9 = i4 + ((i6 ^ i7) & i5 ^ i7) + this.X[r2[(i8 + 0)]] + 1836072691;
/* 209:    */       
/* 210:295 */       i4 = i9 << s2[(i8 + 0)] | i9 >>> 32 - s2[(i8 + 0)];
/* 211:    */       
/* 212:297 */       i9 = i7 + ((i5 ^ i6) & i4 ^ i6) + this.X[r2[(i8 + 1)]] + 1836072691;
/* 213:    */       
/* 214:299 */       i7 = i9 << s2[(i8 + 1)] | i9 >>> 32 - s2[(i8 + 1)];
/* 215:    */       
/* 216:301 */       i9 = i6 + ((i4 ^ i5) & i7 ^ i5) + this.X[r2[(i8 + 2)]] + 1836072691;
/* 217:    */       
/* 218:303 */       i6 = i9 << s2[(i8 + 2)] | i9 >>> 32 - s2[(i8 + 2)];
/* 219:    */       
/* 220:305 */       i9 = i5 + ((i7 ^ i4) & i6 ^ i4) + this.X[r2[(i8 + 3)]] + 1836072691;
/* 221:    */       
/* 222:307 */       i5 = i9 << s2[(i8 + 3)] | i9 >>> 32 - s2[(i8 + 3)];
/* 223:    */     }
/* 224:309 */     for (i8 = 48; i8 < 64; i8 += 4)
/* 225:    */     {
/* 226:310 */       i9 = i4 + (i5 ^ i6 ^ i7) + this.X[r2[(i8 + 0)]];
/* 227:    */       
/* 228:312 */       i4 = i9 << s2[(i8 + 0)] | i9 >>> 32 - s2[(i8 + 0)];
/* 229:    */       
/* 230:314 */       i9 = i7 + (i4 ^ i5 ^ i6) + this.X[r2[(i8 + 1)]];
/* 231:    */       
/* 232:316 */       i7 = i9 << s2[(i8 + 1)] | i9 >>> 32 - s2[(i8 + 1)];
/* 233:    */       
/* 234:318 */       i9 = i6 + (i7 ^ i4 ^ i5) + this.X[r2[(i8 + 2)]];
/* 235:    */       
/* 236:320 */       i6 = i9 << s2[(i8 + 2)] | i9 >>> 32 - s2[(i8 + 2)];
/* 237:    */       
/* 238:322 */       i9 = i5 + (i6 ^ i7 ^ i4) + this.X[r2[(i8 + 3)]];
/* 239:    */       
/* 240:324 */       i5 = i9 << s2[(i8 + 3)] | i9 >>> 32 - s2[(i8 + 3)];
/* 241:    */     }
/* 242:327 */     i8 = j + i2 + i7;
/* 243:328 */     this.currentVal[1] = (k + i3 + i4);
/* 244:329 */     this.currentVal[2] = (m + n + i5);
/* 245:330 */     this.currentVal[3] = (i + i1 + i6);
/* 246:331 */     this.currentVal[0] = i8;
/* 247:    */   }
/* 248:    */   
/* 249:    */   public String toString()
/* 250:    */   {
/* 251:337 */     return "RIPEMD-128";
/* 252:    */   }
/* 253:    */ }


/* Location:           E:\java decompi;er\burst.jar
 * Qualified Name:     fr.cryptohash.RIPEMD128
 * JD-Core Version:    0.7.1
 */